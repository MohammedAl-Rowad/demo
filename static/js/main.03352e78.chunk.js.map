{"version":3,"sources":["features/VizCompletedSection/VizCompletedSection.js","features/vizForm/VizForm.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["HighchartSankey","Highcharts","Dependencywheel","VizCompletedSection","type","num","shouldBe","useState","Array","from","length","map","selected","id","generate","title","company","companyName","txt","lorem","paragraph","state","setState","Fragment","Grid","container","spacing","style","marginTop","item","xs","Box","boxShadow","Card","onClick","changeId","reset","className","CardActionArea","CardContent","Typography","gutterBottom","variant","component","highcharts","options","text","credits","enabled","accessibility","point","valueDescriptionFormat","chart","height","series","keys","data","name","dataLabels","color","textPath","attributes","dy","distance","size","useStyles","makeStyles","theme","paper","display","flexDirection","alignItems","avatar","margin","form","width","submit","appBar","position","marginLeft","flex","Transition","React","forwardRef","props","ref","Slide","direction","VizForm","formTxt","openTxt","icon","open","active","classes","handleClose","Container","maxWidth","CssBaseline","Avatar","Button","fullWidth","Dialog","scroll","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","aria-label","Badge","badgeContent","createMuiTheme","palette","primary","light","blueGrey","main","dark","secondary","common","black","root","media","App","ThemeProvider","CardActions","Drawer","anchor","counterSlice","createSlice","initialState","value","reducers","increment","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03352e78.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  Typography,\n  Grid,\n  Box,\n} from '@material-ui/core'\nimport CheckIcon from '@material-ui/icons/Check'\nimport ClosekIcon from '@material-ui/icons/Close'\nimport { lorem, company } from 'faker'\nimport { generate } from 'shortid'\n\nimport Highcharts from 'highcharts'\nimport Dependencywheel from 'highcharts/modules/dependency-wheel'\nimport HighchartSankey from 'highcharts/modules/sankey'\nimport HighchartsReact from 'highcharts-react-official'\nHighchartSankey(Highcharts)\nDependencywheel(Highcharts)\n\nconst VizCompletedSection = ({ type, num, shouldBe }) => {\n  const [state, setState] = useState(\n    Array.from({ length: num }).map(() => ({\n      selected: false,\n      id: generate(),\n      title: company.companyName(),\n      txt: lorem.paragraph(),\n    }))\n  )\n\n  const update = (changeId) => {\n    setState(\n      state.map(({ selected, id, ...reset }) =>\n        id === changeId\n          ? { id, selected: !selected, ...reset }\n          : { selected, id, ...reset }\n      )\n    )\n  }\n\n  if (type !== shouldBe) {\n    return null\n  }\n\n  const options = {\n    title: {\n      text: '',\n    },\n    credits: {\n      enabled: false,\n    },\n    accessibility: {\n      point: {\n        valueDescriptionFormat:\n          '{index}. From {point.from} to {point.to}: {point.weight}.',\n      },\n    },\n    chart: {\n      height: 800,\n    },\n    series: [\n      {\n        keys: ['from', 'to', 'weight'],\n        data: [\n            ['START', 'COMP_01', 1],\n            ['START', 'COMP_02', 1],\n            ['START', 'COMP_03', 1],\n            ['START', 'COMP_04', 1],\n            ['COMP_04', 'COMP_05', 1],\n            ['COMP_04', 'COMP_06', 1],\n            ['COMP_04', 'COMP_07', 1],\n            ['COMP_06', 'COMP_07', 1],\n            ['COMP_08', 'COMP_07', 1],\n            ['COMP_05', 'COMP_08', 1],\n        ],\n        type: 'dependencywheel',\n        name: 'Dependency wheel series',\n        dataLabels: {\n          color: '#333',\n          textPath: {\n            enabled: true,\n            attributes: {\n              dy: 5,\n            },\n          },\n          distance: 10,\n        },\n        size: '100%',\n      },\n    ],\n  }\n\n  return (\n    <React.Fragment>\n      {type === 'faildTests' && <h1>Faild Tests</h1>}\n      {type === 'passedTests' && <h1>Passed Tests</h1>}\n      {type === 'completedSections' && <h1>Completed Sections</h1>}\n      {type === 'completedPayments' && <h1>Completed Payments</h1>}\n      {type === 'completedCourses' && <h1>Completed Courses</h1>}\n      {type === 'markedTextAsRead' && <h1>Marked Text As Read</h1>}\n      {type === 'submittedForms' && <h1>Submitted Forms</h1>}\n      {type === 'chart' && <h1>Dependency Wheel</h1>}\n      {type === 'meetsPerformaceCriteria' && (\n        <h1>Meets Performance Criteria</h1>\n      )}\n      <Grid container spacing={3} style={{ marginTop: 20 }}>\n        {state.map(({ id, selected, title, txt }) => (\n          <Grid item xs={3} key={id}>\n            <Box boxShadow={3}>\n              <Card\n                onClick={() => update(id)}\n                className={`${!selected ? 'xx' : 'gg'}`}\n              >\n                <CardActionArea>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {title} {selected ? <CheckIcon /> : <ClosekIcon />}\n                    </Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                      {txt}\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n      {type === 'chart' && (\n        <HighchartsReact highcharts={Highcharts} options={options} />\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default VizCompletedSection\n","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport VizCompletedSection from '../VizCompletedSection/VizCompletedSection'\nimport {\n  Dialog,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Slide,\n  Badge,\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport ReceiptIcon from '@material-ui/icons/Receipt'\nimport RestorePageIcon from '@material-ui/icons/RestorePage'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport EqualizerIcon from '@material-ui/icons/Equalizer'\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn'\nimport SpellcheckIcon from '@material-ui/icons/Spellcheck'\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\nimport BrandingWatermarkIcon from '@material-ui/icons/BrandingWatermark'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport DonutSmallIcon from '@material-ui/icons/DonutSmall'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    //   backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}))\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default function VizForm({ formTxt, openTxt, icon }) {\n  const [state, setState] = useState({\n    open: false,\n    active: 'completedSections',\n  })\n  const classes = useStyles()\n  const handleClose = () => setState({ ...state, open: false })\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>{icon}</Avatar>\n        {formTxt}\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setState({ open: true, active: state.active })}\n          className={classes.submit}\n        >\n          {openTxt}\n        </Button>\n        <Dialog\n          scroll=\"body\"\n          fullScreen\n          open={state.open}\n          onClose={handleClose}\n          TransitionComponent={Transition}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n              {formTxt}\n              </Typography>\n              <Badge badgeContent={2} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'faildTests' ? 'secondary' : 'inherit'\n                  }\n                  onClick={() => setState({ ...state, active: 'faildTests' })}\n                >\n                  <RestorePageIcon />\n                </IconButton>\n              </Badge>\n              <Badge badgeContent={2} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'passedTests' ? 'secondary' : 'inherit'\n                  }\n                  onClick={() => setState({ ...state, active: 'passedTests' })}\n                >\n                  <ReceiptIcon />\n                </IconButton>\n              </Badge>\n              <Badge badgeContent={10} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'completedSections'\n                      ? 'secondary'\n                      : 'inherit'\n                  }\n                  onClick={() =>\n                    setState({ ...state, active: 'completedSections' })\n                  }\n                >\n                  <CheckCircleIcon />\n                </IconButton>\n              </Badge>\n              <Badge badgeContent={6} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'completedPayments'\n                      ? 'secondary'\n                      : 'inherit'\n                  }\n                  onClick={() =>\n                    setState({ ...state, active: 'completedPayments' })\n                  }\n                >\n                  <AssignmentTurnedInIcon />\n                </IconButton>\n              </Badge>\n              <Badge badgeContent={3} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'completedCourses'\n                      ? 'secondary'\n                      : 'inherit'\n                  }\n                  onClick={() =>\n                    setState({ ...state, active: 'completedCourses' })\n                  }\n                >\n                  <SpellcheckIcon />\n                </IconButton>\n              </Badge>\n              <Badge badgeContent={1} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'submittedForms' ? 'secondary' : 'inherit'\n                  }\n                  onClick={() =>\n                    setState({ ...state, active: 'submittedForms' })\n                  }\n                >\n                  <BrandingWatermarkIcon />\n                </IconButton>\n              </Badge>\n\n              <Badge badgeContent={1} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'meetsPerformaceCriteria'\n                      ? 'secondary'\n                      : 'inherit'\n                  }\n                  onClick={() =>\n                    setState({ ...state, active: 'meetsPerformaceCriteria' })\n                  }\n                >\n                  <EqualizerIcon />\n                </IconButton>\n              </Badge>\n\n              <Badge badgeContent={4} color=\"error\">\n                <IconButton\n                  color={\n                    state.active === 'markedTextAsRead'\n                      ? 'secondary'\n                      : 'inherit'\n                  }\n                  onClick={() =>\n                    setState({ ...state, active: 'markedTextAsRead' })\n                  }\n                >\n                  <DoneAllIcon />\n                </IconButton>\n              </Badge>\n\n              <IconButton\n                color={state.active === 'chart' ? 'secondary' : 'inherit'}\n                onClick={() => setState({ ...state, active: 'chart' })}\n              >\n                <DonutSmallIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"completedSections\"\n            num={10}\n          />\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"markedTextAsRead\"\n            num={4}\n          />\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"passedTests\"\n            num={2}\n          />\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"faildTests\"\n            num={2}\n          />\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"completedPayments\"\n            num={6}\n          />\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"completedCourses\"\n            num={3}\n          />\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"submittedForms\"\n            num={1}\n          />\n          <VizCompletedSection\n            type={state.active}\n            shouldBe=\"meetsPerformaceCriteria\"\n            num={1}\n          />\n          <VizCompletedSection type={state.active} shouldBe=\"chart\" num={0} />\n        </Dialog>\n      </div>\n    </Container>\n  )\n}\n","import React, { useState } from 'react'\r\nimport { CssBaseline, Drawer, Typography, IconButton } from '@material-ui/core'\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\r\n\r\nimport blueGrey from '@material-ui/core/colors/blueGrey'\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility'\r\nimport common from '@material-ui/core/colors/common'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\nimport VizForm from './features/vizForm/VizForm'\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: blueGrey[50],\r\n      main: blueGrey[500],\r\n      dark: blueGrey[900],\r\n    },\r\n    secondary: {\r\n      light: common.black,\r\n      main: common.black,\r\n      dark: common.black,\r\n    },\r\n  },\r\n})\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: 100,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n})\r\n\r\nfunction App() {\r\n  const [open, setState] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              Component 01\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Lizards are a widespread group of squamate reptiles, with over\r\n              6,000 species, ranging across all continents except Antarctica\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"edit\" onClick={() => setState(true)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              Component 02\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Lizards are a widespread group of squamate reptiles, with over\r\n              6,000 species, ranging across all continents except Antarctica\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"edit\" onClick={() => setState(true)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n      <Card className={classes.root}>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              Component 03\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Lizards are a widespread group of squamate reptiles, with over\r\n              6,000 species, ranging across all continents except Antarctica\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"edit\" onClick={() => setState(true)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n      <Drawer anchor=\"right\" open={open} onClose={() => setState(false)}>\r\n        <VizForm\r\n          icon={<VisibilityIcon color=\"primary\" />}\r\n          formTxt={\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Visibility form\r\n            </Typography>\r\n          }\r\n          openTxt=\"Open Visibility Editor\"\r\n        />\r\n        <VizForm\r\n          icon={<DoneAllIcon color=\"primary\" />}\r\n          formTxt={\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Eligibility form\r\n            </Typography>\r\n          }\r\n          openTxt=\"Open Eligibility Editor\"\r\n        />\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}